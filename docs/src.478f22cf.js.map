{"version":3,"sources":["src/canvas.ts","src/etc/keysPressed.ts","src/states/BaseState.ts","src/lib/Rectangle.ts","src/lib/Paddle.ts","src/lib/Ball.ts","src/states/PlayState.ts","src/states/StartState.ts","src/states/StateMachine.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.478f22cf.js","sourceRoot":"..","sourcesContent":["const getCanvasById = (id: string = \"canvas\"): HTMLCanvasElement => {\n  const canvas = document.getElementById(id);\n  if (!(canvas instanceof HTMLCanvasElement)) {\n    throw new Error();\n  }\n  return canvas;\n};\n\nconst canvas = getCanvasById();\ncanvas.width = 800;\ncanvas.height = 400;\n\nconst ctx = canvas.getContext(\"2d\");\n\nconst clear = () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n}\n\nexport { canvas, ctx, clear };\n","export const keysPressed = {};\n\nexport const initKeyListener = () => {\n  window.addEventListener(\"keydown\", ({ key }) => {\n    keysPressed[key] = true;\n    console.log(keysPressed)\n  });\n\n  window.addEventListener(\"keyup\", ({ key }) => {\n    delete keysPressed[key];\n    console.log(keysPressed)\n  });\n};\n","export class BaseState {\n  constructor() { }\n\n  start() { }\n  update(dt: number) { }\n  render() { }\n  end() { }\n}\n","import { ctx } from \"../canvas\";\r\n\r\nexport class Rectangle {\r\n  constructor(\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    protected _x: number,\r\n    protected _y: number,\r\n    private color: string\r\n  ) {}\r\n\r\n  get x() {\r\n    return this._x;\r\n  }\r\n  get y() {\r\n    return this._y;\r\n  }\r\n\r\n  hasCollidedWith(object: Rectangle) {\r\n    const insideX =\r\n      this.x + this.width > object.x && this.x < object.x + object.width;\r\n    const insideY =\r\n      this.y + this.height > object.y && this.y < object.y + object.height;\r\n\r\n    return insideX && insideY;\r\n  }\r\n\r\n  render() {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this._x, this._y, this.width, this.height);\r\n  }\r\n}\r\n","import { canvas, ctx } from \"../canvas\";\nimport { keysPressed } from \"../etc/keysPressed\";\nimport { Rectangle } from \"./Rectangle\";\n\nexport class Paddle extends Rectangle {\n  constructor(\n    private dx = 0\n  ) {\n    super(100, 10, 0, 0, \"coral\")\n    this._x = canvas.width / 2 - this.width / 2\n    this._y = canvas.height - this.height - 10\n  }\n\n  update(dt: number): void {\n    this.dx = 0\n    if (keysPressed[\"ArrowLeft\"]) this.dx -= .8\n    if (keysPressed['ArrowRight']) this.dx += .8\n\n    this._x += this.dx * dt\n\n    this._x = Math.min(this._x, canvas.width - this.width)\n    this._x = Math.max(this._x, 0)\n\n\n  }\n}\n","import { canvas } from \"../canvas\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n\r\nexport class Ball extends Rectangle {\r\n  constructor(private dy: number = 0, private dx: number = 0) {\r\n    super(10, 10, canvas.width / 2, canvas.height / 2, \"red\");\r\n\r\n    this.dy = Math.random() * 2 - 1;\r\n    this.dx = Math.random() * 2 - 1;\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (this.x < 0 || this.x > canvas.width - this.width) this.dx *= -1;\r\n    if (this.y < 0) this.dy *= -1;\r\n\r\n    this._x += this.dx * dt;\r\n    this._y += this.dy * dt;\r\n\r\n    if (this.y > canvas.height - this.height) this.reset();\r\n  }\r\n\r\n  reverseX() {\r\n    this.dx *= -1;\r\n  }\r\n  reverseY() {\r\n    this.dy *= -1;\r\n  }\r\n\r\n  reset() {\r\n    this._x = canvas.width / 2;\r\n    this._y = canvas.height / 2;\r\n    this.dy = Math.random() * 2 - 1;\r\n    this.dx = Math.random() * 2 - 1;\r\n  }\r\n}\r\n","import { BaseState } from \"./BaseState\";\nimport { Paddle } from \"../lib/Paddle\";\nimport { clear } from \"../canvas\";\nimport { Ball } from \"../lib/Ball\";\nexport class PlayState extends BaseState {\n  constructor(\n    private paddle = new Paddle(),\n    private ball = new Ball(),\n    private score = 0\n  ) {\n    super();\n  }\n  start() {\n    console.log(\"play state started\");\n  }\n  update(dt: number) {\n    this.paddle.update(dt);\n    this.ball.update(dt);\n\n    if (this.ball.hasCollidedWith(this.paddle)) this.ball.reverseY();\n  }\n\n  render() {\n    clear();\n    this.paddle.render();\n    this.ball.render();\n  }\n\n  end() {\n    console.log(\"play state ended\");\n  }\n}\n","import { BaseState } from \"./BaseState\";\nimport { keysPressed } from \"../etc/keysPressed\";\nimport { gameState } from \"../index\";\nimport { ctx, canvas, clear } from \"../canvas\";\n\nexport class StartState extends BaseState {\n  constructor() {\n    super();\n  }\n  start() {\n    console.log(\"start state started\");\n  }\n  update(dt: number) {\n    if (keysPressed['Enter']) gameState.changeTo(\"playState\")\n\n    clear()\n    ctx.font = \"50px Comic Sans MS\";\n    ctx.textAlign = \"center\"\n    ctx.fillStyle = \"black\"\n    ctx.fillText(\"Press enter to start\", canvas.width / 2, canvas.height / 2)\n  }\n  end() {\n    console.log(\"start state ended\");\n  }\n}\n","import { PlayState } from \"./PlayState\";\nimport { StartState } from \"./StartState\";\nimport { BaseState } from \"./BaseState\";\n\nconst states = [\"playState\", \"startState\"];\n\nexport class StateMachine {\n  constructor(\n    private playState = new PlayState(),\n    private startState = new StartState(),\n    private currentState: BaseState = startState\n  ) {\n    this.startState.start();\n  }\n\n  run(dt: number): void {\n    this.currentState.update(dt);\n    this.currentState.render();\n  }\n\n  changeTo(newState: string): void {\n    if (states.indexOf(newState) < 0) throw new Error(\"Not a valid State\");\n\n    this.currentState.end();\n    this.currentState = this[newState];\n    this.currentState.start();\n  }\n}\n","import { ctx, canvas } from \"./canvas\";\nimport { initKeyListener } from \"./etc/keysPressed\";\nimport { StateMachine } from \"./states/StateMachine\";\n\ninitKeyListener();\n\nexport const gameState = new StateMachine();\n\nctx.fillStyle = \"coral\";\nlet prevTimestamp: number = 0\nconst tick = (timestamp: number) => {\n  const dt = timestamp - prevTimestamp\n  prevTimestamp = timestamp\n\n  gameState.run(dt);\n  window.requestAnimationFrame(tick);\n};\n\nwindow.requestAnimationFrame(tick);\n"]}